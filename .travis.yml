# The language in this case has no bearing - we are going to be making use of "conda" for a
# python distribution for the scientific python stack.
os:
  - linux
  - osx

env:
    global:
        - TARGET_ARCH="x64"
        # BINSTAR_TOKEN
        - secure: "PehmTKhcqhlFUvUhhTB/LiFDnzS1gPnhZmLg1U3/eRGQGinzrSIwBx9L93YdWQMEaQyv719ZG46T21mDSSjhC0EGy/bUb3cURU9tNMMhe+m71457lupOx0DDHOsidywnRzbJxsS/MVolYsoT0Oox0yJwIdpszZ2yxw7WTHaU4lMR7Pb+j6RqKT0jIbECGNBxkosybE8DNlUxWt162sIRNHIDX/LUTO3pxGN/RX0YfGIAY5BelhZN7yE5X8MoU2sxtsOgFnPAat16OIpfSZcZ+P8OYNlA4VAUxZ62cbReBDm2Ej9bBV9WSijJBMImNOVDYtJXwc30rfaEa8Jnz/2eFONb9M9r3hI/Vy6L3eQnPnJ55iDwRUFR4ojjPx9kTSYAzIBwcVUojtJ0HqhMT/+XFVNCnsPn8m4kCTuZF2qDY2A1WgiCUBC8rDMcGiioaH5JAOsoTU0j1tZOZebmkJtPrMCDlesAjX+4cI5MUffSJcyHrqXP8mRFuy8+siYKbG9zGdtduY5ekrS7iaXh+PPayDt884SdupBm+hqyMGNFdlbxGlcuRe3W9pu9zmrDWbvmslax3CJXh5ydLB+mx3vAVbVoIq1Uf2tIjjLU+3qtKSPhkL61b2JMq+i128kuSChCsu3w6a4aDqLtDxSVCEh4WjUfTygX1JaQ2VmNaFdXsv0="
        # TWINE_PASSWORD
        - secure: "EWYTfL95Zb8IHtwkirv4WvZX0SzczyfzPBoiqcPfJ6SkbBvhUOfaM/K9z8KDfs/hTZhmifVDnWhM4WZjRwTCtgu/XvoeljvJu+ycTmHS17l4VSorUA7bvUTbOKcPpBeG7tKN9G8/pGNCW6VTGxOmEEXtNY4b91DwsDi+JXEqhNueWM3N5vpz2zzT9H2IjjpTpN+6aLKVDSWx9YQv0EuX1AdztgInrGS9NR6H/axFuo1uyDCUd1yuksXGUsbLiKLW11ylx3nEZ6OujbDc2TyETDvlDFYpEeJ4no4fVVp1Hpbz1Aq5gCHY20LGCwbJYBrRQY+16SDybxQiiWXazGR4BTtt0SGXqSZWyQhUlru0rsrC+VyQ/3K2c1ogDmc9nJ+cH5vJODmbofSljSNZ/ueO5VHw/wP9Pac18GJKSKBJ747w3mnaJaPhwSLDbgBoAWjlEAjInOPPHBHa1ziOQDjY8ujgaU0Wqfm5JP3IhMg31b9UzL4Rumy7RCeStGDB7zt/+lgdwRDVs4ywZkpxlmhdt0QpyOoXDRLdCaOvh/eaxjwRm/tO3OtXw/6DGejVtufQLWlPBOe2jRhwOn6a+IA9vS8Y86YMV+9EfuhnmiXXF8BI3IeY+gv2EDcbIJ88IUabuqrpfja6MSr8wB/TSrCQSWVqbPhEp8qAfVbKk+cV9NM="
        - CONDA_INSTALL_LOCN="${HOME}/miniconda"
        - TWINE_USERNAME="mwcraig"
    matrix:
        - CONDA_PY=3.5
        - CONDA_PY=3.6
        - CONDA_PY=3.7

install:
    # Install and set up miniconda.
    - if [ $TRAVIS_OS_NAME == "linux" ]; then wget http://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh; fi
    - if [ $TRAVIS_OS_NAME == "osx" ]; then wget http://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O miniconda.sh; fi
    - bash miniconda.sh -b -p $CONDA_INSTALL_LOCN
    - export PATH=${CONDA_INSTALL_LOCN}/bin:$PATH
    - conda config --set always_yes true

    # Gets us vpnotebook
    - conda config --add channels vpython

    - conda update --quiet conda

    # Install a couple of dependencies we need for sure.
    # Not sure why cython is necessary since it is listed as a build dependency.
    - conda install --quiet jinja2 conda-build anaconda-client cython twine pytest

    # make a wheel building environment to ensure correct python version.
    - conda create --quiet -n wheel-build python=$CONDA_PY wheel cython

    # For debugging....
    - conda info -a

script:
    # Define a variable that will be YES for exactly one os/python
    # combination and use it to decide whether to upload an sdist.
    # This should prevent spurious failures at the deploy stage.
    - export UPLOAD_SDIST="NO"
    - if [ "$TRAVIS_OS_NAME" == "linux" ]; then
        if [ "$CONDA_PY" == "3.6" ]; then
            export UPLOAD_SDIST="YES";
        fi
      fi
    - echo $UPLOAD_SDIST
    # Run tests
    - if [ "$TRAVIS_OS_NAME" == "linux" ]; then
        python setup.py install;
        py.test vpython;
      fi
    # Not much of a real test yet, just try to build myself...
    - conda build --quiet vpython.recipe
    - export CONDA_PACKAGE=`conda build --output vpython.recipe | grep bz2`
    - export OUTPUT_DIR=`dirname $CONDA_PACKAGE`

    # Uncomment the next line when bdist_wheel option in recipe starts
    # paying attention to CONDA_PY. See:
    # https://github.com/conda/conda-build/issues/1832
    # - export WHEEL_PACKAGE="$OUTPUT_DIR/*.whl"
    - source activate wheel-build; python setup.py bdist_wheel; source deactivate
    - export WHEEL_PACKAGE=dist/*.whl
    - echo $CONDA_PACKAGE
    - echo $WHEEL_PACKAGE

    # This will fail if the package does not actually exist
    - ls $CONDA_PACKAGE $WHEEL_PACKAGE
    - if [ $TRAVIS_EVENT_TYPE == "cron" ]; then
        conda install -c astropy -c conda-forge extruder twine;
        copy_packages vp_copy.yaml vpython;
      fi


after_success:
    - echo $TRAVIS_TAG
    - git branch --contains $TRAVIS_TAG
    - upload_label=$(python .ci-support/upload_label.py)
    - if [[ "$TRAVIS_TAG" ]]; then upload_build="true"; else upload_build=; fi
    - echo $upload_build
    - echo "Uploading to $upload_label"
    # If this build is because of a tag, upload the build if it succeeds.
    - if [ -n "$upload_build" ]; then anaconda -t $BINSTAR_TOKEN upload -u vpython -l $upload_label $CONDA_PACKAGE; fi
    # Upload wheel builds to pypi instead of relying on travis deploy because that
    # does not seem to continue gracefully if a distribution already exists,
    # and in most of the jobs a source distribution will already have been
    # uploaded to PyPI.
    #
    # sdist is still uploaded with travis deploy.
    #
    # The twine password has been set in $TWINE_PASSWORD.
    - if [ -n "$upload_build" ]; then twine upload $WHEEL_PACKAGE; fi
    # In any event, remove the built wheel because having it around appears to
    # confuse the deploy step, which is still trying to upload a wheel.
    - rm -f $WHEEL_PACKAGE
deploy:
  provider: pypi
  user: mwcraig
  password:
    secure: t4SUebn2FYy4FK6kLNt//srRvzz7bYhHXT7fMu98svUjwT92InT3TIvpE+6AXvtZeRJL3CnUD9yO6c6xJXZ5Lj4f++P+GA9qz+ji4qBxOHO6qip9eDghwFzSx65pgc5vRMSJnL6h/iFPdfkpG76WNp3OA0vlaRLQw7GSBbV5+ZSpbhIHAPVMoTzDvcmBYe5eszf/Meig6uOdf4yh7Cik0sw/OztXlmq9gRgwVI1CwWkw7uK388yWujul5zpKFvyVBuycrfooGpibtfvZNu6xpVpWnqVT1jnNA9mj03A5wlk7RwmcRabWTa3x2FHJVtnUmDEgMaali4N95Fw3WJi8L6hdNDkkkamfkPEogka7buNpSrkBXW9K722WmxQ6KYA5It2dUO/KkWIaMoIumIuJyWEA6UHih1vxDZyWqCZakqyloE8g9wZGrUPqtpqEFwY4E6f1LesbgWHIrtbm6LOWwltYma0TfTLpAYRCCMTJMAXi3z1udjtrOCt7NEpsJaj17H5wh8nh1XwEpLS9dNcWqtRqqSF5YRHmnFo2TeefIzGH5VDp2PG94bOFTJhKKU224rEHXIo1vb4HyL0Gye7ilyZij5kdSEX6LiJbsmOpPp1e6lc83MIM1x9Cti1inIW4ZH0Y9QhwMd9SnAEr9b8vgOk5ozIi8hZmVtbA8bJhjoc=
  upload_docs: no
  skip_cleanup: true
  on:
    tags: true
    distributions: "sdist"
    repo: vpython/vpython-jupyter
    condition: $UPLOAD_SDIST = "YES"
